name: Test

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - '*'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.19.x

      - run: go install golang.org/x/tools/cmd/goimports@v0.1.12

      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Test
        run: go test ./...

      - name: Format
        run: go fmt ./...

      - name: Vet
        run: go vet ./...

      - run: goimports -w .

      - name: Verify No Changes
        id: verify-no-changes
        uses: tj-actions/verify-changed-files@v17

      - name: Fail If Changes
        if: steps.verify-no-changes.outputs.files_changed == 'true'
        run: "false"
  integration-test:
    runs-on: ubuntu-latest

    steps:
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.19.x

      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install
        run: go install .

      - name: Export Command Test
        run: it/export.sh
  docs:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.19.x
      - uses: actions/checkout@v4
      - name: Documentation Build
        run: go run ./hack/generate-manual
      - uses: actions/upload-artifact@v3
        with:
          name: man-pages
          path: man/
  # This action tests two things: That the GitHub Action works (as defined in the action.yml file) and by running
  # Paranoia on itself that we are shipping only the correct certs internally.
  paranoia-action-self-check:
    runs-on: ubuntu-latest
    env:
      CONTAINER_TAR: container.tar
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and export to Docker
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=docker,dest=${{ env.CONTAINER_TAR }}

      - name: Paranoia Self-Check
        uses: ./
        with:
          target_tar: file://${{ env.CONTAINER_TAR }}
